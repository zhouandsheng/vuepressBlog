(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{412:function(t,e,r){"use strict";r.r(e);var a=r(56),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"myjavascript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#myjavascript"}},[t._v("#")]),t._v(" myjavascript")]),t._v(" "),r("p",[t._v("myjavascript")]),t._v(" "),r("h2",{attrs:{id:"javascriptb标准库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascriptb标准库"}},[t._v("#")]),t._v(" javascriptb标准库")]),t._v(" "),r("h3",{attrs:{id:"object方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object方法"}},[t._v("#")]),t._v(" Object方法")]),t._v(" "),r("p",[r("strong",[t._v("Object静态方法")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1.Object.keys()\n2.Object.getOwnPropertyNames()\n3.Object.defineProperty()\n4.Object.defineProperties()\n")])])]),r("p",[r("strong",[t._v("Object实例方法")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1.Object.prototype.valueOf()\n2.Object.prototype.toString()\n3.Object.prototype.toLocaleString()\n4.Object.prototype.hasOwnProperty()\n5.Object.prototype.isPrototypeOf()\n")])])]),r("h3",{attrs:{id:"数组-array-对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组-array-对象"}},[t._v("#")]),t._v(" 数组（Array）对象")]),t._v(" "),r("p",[r("strong",[t._v("静态方法")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1.Array.isArray()\n")])])]),r("p",[r("strong",[t._v("实例方法")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. valueOf(), toString()\n2. push(), pop()\n3. shift(), unshift()\n4. join() \n5. concat()\n6. reverse()\n7. slice(), splice() \n8. sort()\n9. map()\n10. forEach()\n11. filter()\n12. some(), every()\n13. reduce() ,reduceRight()\n14. indexOf(), lastIndexOf()\n")])])]),r("h3",{attrs:{id:"字符串方法-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法-string"}},[t._v("#")]),t._v(" 字符串方法（String）")]),t._v(" "),r("p",[r("strong",[t._v("静态方法")]),t._v("\n1.String.fromCharCode()")]),t._v(" "),r("p",[r("strong",[t._v("实例方法")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. String.prototype.charAt()\n2. String.prototype.charCodeAt()\n3. String.prototype.concat()\n4. String.prototype.slice()\n5. String.prototype.substring()\n6. String.prototype.substr()\n7. String.prototype.indexOf()，String.prototype.lastIndexOf()\n8. String.prototype.trim()\n9. String.prototype.toLowerCase()，String.prototype.toUpperCase()\n10. String.prototype.match() \n11. String.prototype.search()，String.prototype.replace()\n12. String.prototype.split()\n13. String.prototype.localeCompare()\n")])])]),r("h3",{attrs:{id:"数字方法-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数字方法-number"}},[t._v("#")]),t._v(" 数字方法（Number）")]),t._v(" "),r("p",[r("strong",[t._v("实例方法")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. Number.prototype.toString()\n2. Number.prototype.toFixed()\n3. Number.prototype.toExponential()\n4. Number.prototype.toPrecision()\n5. Number.prototype.toLocaleString()\n")])])]),r("h2",{attrs:{id:"关于js的事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于js的事件"}},[t._v("#")]),t._v(" 关于js的事件")]),t._v(" "),r("h2",{attrs:{id:"事件接口eventtarget"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件接口eventtarget"}},[t._v("#")]),t._v(" 事件接口EventTarget")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. addEventListener()  绑定事件\n    该方法接受三个参数。\n    type：事件名称，大小写敏感。\n    listener：监听函数。事件发生时，会调用该监听函数。\n    useCapture：布尔值，如果设为true，表示监听函数将在捕获阶段（capture）触发（参见后文《事件的传播》部分）。该参数可选，默认值为false（监听函数只在冒泡阶段被触发）。\n2. removeEventListener() 移除事件 参数跟绑定事件的方法一致\n3. dispatchEvent() 触发事件\n\nEvent.preventDefault()\nEvent.stopPropagation()\n")])])]),r("h2",{attrs:{id:"关于es6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于es6"}},[t._v("#")]),t._v(" 关于ES6")]),t._v(" "),r("h3",{attrs:{id:"字符串新增方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符串新增方法"}},[t._v("#")]),t._v(" 字符串新增方法")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. includes() ,startsWith(), endsWith()\n2. repeat() \n3. trim() ,trimStart(), trimEnd()\n4. matchAll() ,replaceAll()\n")])])]),r("h3",{attrs:{id:"数值新增方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数值新增方法"}},[t._v("#")]),t._v(" 数值新增方法")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. Number.isNaN()\n")])])]),r("h3",{attrs:{id:"数组新增方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组新增方法"}},[t._v("#")]),t._v(" 数组新增方法")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. Array.from(), Array.fo()\n2. find() ,findIndex()\n3. fill()\n4. includes()\n5. fat(), fatMap()\n")])])]),r("h3",{attrs:{id:"promise方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#promise方法"}},[t._v("#")]),t._v(" Promise方法")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. Promise.prototype.then()\n2. Promise.prototype.catch()\n3. Promise.prototype.finally()\n4. Promise.all()\n5. Promise.race()\n6. Promise.resolve()\n7. Promise.reject()\n8. Promise.any()\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);